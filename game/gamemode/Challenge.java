package game.gamemode;

import edu.monash.fit2099.engine.*;
import game.Floor;
import game.Player;
import game.Wall;
import game.actor.dinosaur.Brachiosaur;
import game.actor.dinosaur.Stegosaur;
import game.vegetation.Bush;
import game.vegetation.Dirt;
import game.vegetation.Lake;
import game.vegetation.Tree;

import java.util.Arrays;
import java.util.List;
import java.util.Objects;

/**
 * Allows player to play against a limited number of moves & having to hit the target ecopoints to win
 */
public class Challenge {
    private Display display;
    private int ecoPointsToWin;
    private int movesToLose;

    /**
     * Constructor
     *
     * @param display
     * @param ecoPointsToWin
     * @param movesToLose
     */
    public Challenge(Display display, int ecoPointsToWin, int movesToLose) {
        Objects.requireNonNull(display);
        this.display = display;
        this.ecoPointsToWin = ecoPointsToWin;
        this.movesToLose = movesToLose;
    }

    public Challenge() {
        Objects.requireNonNull(display);
        this.display = new Display();
        this.ecoPointsToWin = 1000;
        this.movesToLose = 500;
    }
    public  static void challengeRun(){
        World world = new World(new Display());

        FancyGroundFactory groundFactory = new FancyGroundFactory(new Dirt(), new Wall(), new Floor(), new Tree(), new Bush(), new Lake());

        List<String> map = Arrays.asList(
                "................................................................................",
                ".......................................................~~~~~~...................",
                ".....#######.............................................~~~~~..................",
                ".....#_____#.............*******...........................~~~~~~~~~............",
                ".....#_____#................***..................................~~~~...........",
                ".....###.###....................................................................",
                "................................................................................",
                "......................................+++.......................................",
                ".......................................++++..........~~~~.......................",
                "...................................+++++...............~~~......................",
                ".....................................++++++.....................................",
                "......................................+++.......................................",
                ".....................................+++....................~...................",
                "................................................................................",
                "............+++.................................................................",
                ".............+++++..............................................................",
                "...............++........................................+++++..................",
                ".............+++....................................++++++++....................",
                "............+++.......................................+++.......................",
                "................................................................................",
                ".........................................................................++.....",
                "...........................***..........................................++.++...",
                ".........................*******.........................................++++...",
                "............................*******.......................................++....",
                "................................................................................");

        List<String> secondMap = Arrays.asList(
                "................................................................................",
                "................................................................................",
                "................................................................................",
                ".........................*******................................................",
                "............................***.................................................",
                "................................................................................",
                "................................................................................",
                "......................................+++.......................................",
                ".......................................++++.....................................",
                "...................................+++++........................................",
                ".....................................++++++.....................................",
                "......................................+++.......................................",
                ".....................................+++........................................",
                "................................................................................",
                "............+++.................................................................",
                ".............+++++..............................................................",
                "...............++........................................+++++..................",
                ".............+++....................................++++++++....................",
                "............+++.......................................+++.......................",
                "................................................................................",
                ".........................................................................++.....",
                "...........................***..........................................++.++...",
                ".........................*******.........................................++++...",
                "............................*******.......................................++....",
                "................................................................................");

        GameMap gameMap = new GameMap(groundFactory, map);
        GameMap secondGameMap = new GameMap(groundFactory, secondMap);


        world.addGameMap(gameMap);
        world.addGameMap(secondGameMap);

        Actor player = new Player("Player", '@', 100);
        world.addPlayer(player, gameMap.at(9, 4));

        // Place a pair of stegosaurs in the middle of the map
        gameMap.at(30, 12).addActor(new Stegosaur("Stegosaur"));
        gameMap.at(32, 12).addActor(new Stegosaur("Stegosaur"));

        gameMap.at(36, 16).addActor(new Brachiosaur("Brachiosaur", "M"));
        gameMap.at(38, 18).addActor(new Brachiosaur("Brachiosaur", "F"));
        gameMap.at(31, 20).addActor(new Brachiosaur("Brachiosaur", "M"));
        gameMap.at(37, 21).addActor(new Brachiosaur("Brachiosaur", "F"));

        world.run();
    }


    /**
     * Select and return an action to perform on the current turn.
     *
     * @param actions    collection of possible Actions for this Actor
     * @param lastAction The Action this Actor took last turn. Can do interesting things in conjunction with Action.getNextAction()
     * @param map        the map containing the Actor
     * @param display    the I/O object to which messages may be written
     * @return the Action to be performed
     */
    public Action playTurn(Actions actions, Action lastAction, GameMap map, Display display) {
        return null;
    }
}
